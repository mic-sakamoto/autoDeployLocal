/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/3.5/userguide/java_library_plugin.html
 */


// Apply the java-library plugin to add support for Java Library
apply plugin: 'java-library'
apply plugin: 'war'
apply plugin: 'eclipse'
apply plugin: 'eclipse-wtp'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

defaultTasks 'clean',  'build'. 'war'

war {
    archiveFileName = 'myapp.war'  // 出力ファイル名
    destinationDirectory = file('C:/')
}

tasks.register('cleanWar', Delete) {
    delete file('target/myapp.war')
}
clean.dependsOn cleanWar

// ***************************************************************
// Struts2の場合はこのバージョンを変更して、
// eclipseで、「gradleプロジェクトのリフレッシュ」を実行
// ***************************************************************

//def struts2Ver='2.5.30'
def struts2Ver='6.6.0'

def defaultEncoding = 'UTF-8'


def _rootDir = "$rootDir"
def _propDir = '/src/main/resources/'
//propertyの絶対パス
def propDir = _rootDir + _propDir

//通常利用されるpropertyかつ、warに固められるプロパティ
def propFileName     = propDir + 'config.properties'
//リリース用プロパティ
def releasePropFile  = propDir + 'config.properties_release'
//ステージング用プロパティ
def stagingPropFile  = propDir + 'config.properties_staging'
//ローカル環境用
def devLocalPropFile = propDir + 'config.properties_local'
//MIC社内テスト環境用
def devMicPropFile   = propDir + 'config.properties_mic'


//war・jarに固める際に一緒にアーカイブされるディレクトリ
def archivePropDir='src/main/resources/'

def env = project.hasProperty( 'env' ) ? "${env}" : ''


// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    mavenCentral()
    mavenCentral artifactUrls: [
        'https://jaspersoft.jfrog.io/jaspersoft/third-party-ce-artifacts/'
    ]
}

dependencies {


	// This dependency is exported to consumers, that is to say found on their compile classpath.
	api 'org.apache.commons:commons-math3:3.6.1'

	// This dependency is used internally, and not exposed to consumers on their own compile classpath.
	implementation 'com.google.guava:guava:21.0'

	// Use JUnit test framework
	testImplementation 'junit:junit:4.12'

	// https://mvnrepository.com/artifact/org.apache.tomcat/tomcat-catalina
	//implementation group: 'org.apache.tomcat', name: 'tomcat-catalina', version: '8.0.50'
	//providedimplementation group: 'org.apache.tomcat', name: 'tomcat-catalina', version: '8.0.50'

    // https://mvnrepository.com/artifact/javax.servlet/javax.servlet-api
	compileOnly group: 'javax.servlet', name: 'javax.servlet-api', version: '4.0.1'

	// https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-core
	//implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.17.2'
	implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.24.1'


	// https://mvnrepository.com/artifact/org.slf4j/slf4j-simple
	implementation group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.36'



	// https://mvnrepository.com/artifact/org.apache.struts/struts2-convention-plugin
	implementation group: 'org.apache.struts', name: 'struts2-convention-plugin', version: struts2Ver
	// https://mvnrepository.com/artifact/org.apache.struts/struts2-tiles-plugin
	implementation group: 'org.apache.struts', name: 'struts2-tiles-plugin', version: struts2Ver
	// https://mvnrepository.com/artifact/org.apache.struts/struts2-core
	implementation group: 'org.apache.struts', name: 'struts2-core', version: '6.6.0'
	// https://mvnrepository.com/artifact/org.apache.struts/struts2-json-plugin
	implementation group: 'org.apache.struts', name: 'struts2-json-plugin', version: struts2Ver
	// https://mvnrepository.com/artifact/org.apache.struts/struts2-jasperreports-plugin
	implementation group: 'org.apache.struts', name: 'struts2-jasperreports-plugin', version: struts2Ver
	// https://mvnrepository.com/artifact/com.jgeppert.struts2.jquery/struts2-jquery-plugin
	implementation group: 'com.jgeppert.struts2.jquery', name: 'struts2-jquery-plugin', version: '3.7.1'


	// https://mvnrepository.com/artifact/org.apache.ant/ant
	implementation group: 'org.apache.ant', name: 'ant', version: '1.8.3'

	// https://mvnrepository.com/artifact/mysql/mysql-connector-java
	implementation group: 'mysql', name: 'mysql-connector-java', version: '5.1.47'

	// https://mvnrepository.com/artifact/com.google.code.gson/gson
//	implementation group: 'com.google.code.gson', name: 'gson', version: '2.11.0'
	// https://mvnrepository.com/artifact/com.google.code.gson/gson
	implementation group: 'com.google.code.gson', name: 'gson', version: '2.10.1'
	

	implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.7'
	implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.7'

	// https://mvnrepository.com/artifact/javax.mail/mail
	implementation group: 'javax.mail', name: 'mail', version: '1.4.7'
	// https://mvnrepository.com/artifact/com.amazonaws/aws-java-sdk
	implementation group: 'com.amazonaws', name: 'aws-java-sdk', version: '1.11.147'
	// https://mvnrepository.com/artifact/jstl/jstl
	implementation group: 'jstl', name: 'jstl', version: '1.2'

	// https://mvnrepository.com/artifact/javax.xml.bind/jaxb-api
	implementation group: 'javax.xml.bind', name: 'jaxb-api', version: '2.2.4'


	// https://mvnrepository.com/artifact/net.sf.jasperreports/jasperreports
	implementation group: 'net.sf.jasperreports', name: 'jasperreports', version: '6.0.0'
	// https://mvnrepository.com/artifact/bouncycastle/bcmail-jdk14
	implementation group: 'bouncycastle', name: 'bcmail-jdk14', version: '139'
	// https://mvnrepository.com/artifact/net.sf.jasperreports/jasperreports-fonts
	implementation group: 'net.sf.jasperreports', name: 'jasperreports-fonts', version: '5.6.1'
	// https://mvnrepository.com/artifact/com.lowagie/itext
	implementation group: 'com.lowagie', name: 'itext', version: '2.1.7'
	// https://mvnrepository.com/artifact/com.itextpdf/itext-asian
	implementation group: 'com.itextpdf', name: 'itext-asian', version: '5.2.0'
	implementation group: 'commons-net', name: 'commons-net', version: '3.3'
	implementation group: 'org.apache.poi', name: 'poi-ooxml', version: '3.16'

	// https://mvnrepository.com/artifact/com.opencsv/opencsv
	implementation group: 'com.opencsv', name: 'opencsv', version: '5.7.1'


	// https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind
	implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.6.6'

	// https://mvnrepository.com/artifact/org.olap4j/olap4j
	implementation group: 'org.olap4j', name: 'olap4j', version: '1.2.0'

	// https://mvnrepository.com/artifact/com.opencsv/opencsv
	implementation group: 'com.opencsv', name: 'opencsv', version: '5.8'

	//implementation group: 'com.jcraft', name: 'jsch', version: '0.1.55'
	// https://mvnrepository.com/artifact/com.github.mwiede/jsch
	implementation group: 'com.github.mwiede', name: 'jsch', version: '0.2.13'



}

//clean→compilejava→processResources→classes→warの順番なので、classesする前にpropertyをコピーしておく
processResources{

	def orgFile  = devLocalPropFile

	if ( project.hasProperty( 'env' ) ) {

		if ( env == 'release' ) {
			orgFile = releasePropFile
			war.baseName = war.baseName


		} else if ( env == 'staging' ) {
			orgFile = stagingPropFile
			war.baseName = war.baseName

		} else if ( env == 'devMic' ) {
			orgFile = devMicPropFile

			war.baseName = war.baseName

		} else {

			war.baseName = war.baseName
		}

	} else {
		//envの指定がない場合は、localとする
		war.baseName = war.baseName
	}

	println orgFile
	println propFileName

	//Library.xmlを削除する
	new File( propFileName ) .delete()

//	java.nio.file.Files.copy( destFile , orgFile , REPLACE_EXISTING )
	new File( propFileName ) << new File( orgFile ).readBytes()

}


//タスクの引数により、warに含めるプロパティを入れ替える。
war.doFirst{
	//今は何もしない。
}

//warを作成したら、localで実行する際に参照するpropertyをlocal用に戻す
war.doLast{

	new File( propFileName ) .delete()
	new File( propFileName ) << new File( devLocalPropFile ).readBytes()

}
